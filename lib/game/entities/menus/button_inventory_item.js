/** *  button_inventory_item.js *  ----- */ig.module(    'game.entities.menus.button_inventory_item').requires(    'plugins.button.button',    'game.entities.menus.button_weapon_equip',    'game.entities.menus.button_weapon_unequip',    'game.entities.menus.button_inventory_item_use',    'game.entities.menus.button_inventory_item_discard').defines(function() {    'use strict';    ig.global.EntityButton_inventory_item = ig.Button.extend({        index: 0,        animSheet: new ig.AnimationSheet('media/gui/bignewMenu.png', 200, 32),        size: {x: 200, y: 32},        init: function(x, y, settings) {            this.parent(x, y, settings);            this.name = 'btn_inventory_item_' + this.index;            var u = ig.game.units[ig.game.activeUnit].unitType === 'player' ? ig.game.units[ig.game.activeUnit] : ig.game.units[ig.game.activeUnit].unitType === 'enemy' ? ig.game.targetedUnit : null;            if(typeof u !== null) {                this.iconLeft = u.item[this.index] !== null ? u.item[this.index].icon : null;                if(ig.game.units[ig.game.activeUnit].hasEquippedItem === true && this.index === 0){                    this.text = [u.item[this.index] !== null ? "(E) " + u.item[this.index].name : '----'];                } else                     this.text = [u.item[this.index] !== null ? u.item[this.index].name : '----'];                this.textRight = [u.item[this.index] !== null ? u.item_uses[this.index] : ''];            }        },        pressedUp: function() {            var u = ig.game.units[ig.game.activeUnit].unitType === 'player' ? ig.game.units[ig.game.activeUnit] : ig.game.units[ig.game.activeUnit].unitType === 'enemy' ? ig.game.targetedUnit : null;            if(typeof u !== null) {                // Determine which item is being selected.                u.selectedItemIndex = this.index;                // Make the item clicked the weapon for possible equipment                u.selectedWeapon = u.item[this.index];                u.isEquipping = true;                if(typeof ig.game.getEntityByName('btn_weapon_equip') !== 'undefined')                    ig.game.getEntityByName('btn_weapon_equip').kill();                if(typeof ig.game.getEntityByName('btn_inventory_item_use') !== 'undefined')                    ig.game.getEntityByName('btn_inventory_item_use').kill();                // The selected item is a valid existing item                if(u.item[u.selectedItemIndex] !== null) {                    // Don't spawn equip/unequip/use button if player is deciding which item to drop                    if(ig.game.item_drop === null) {                        // The selected item was not in unit's inventory slot 0, move item to slot 0 and equip the item                        if(u.selectedItemIndex > 0) {                            if(u.item[u.selectedItemIndex].type === 'equip') {                                // Check if equip button exists. If not spawn it, else do nothing.                                if(typeof ig.game.getEntityByName('btn_weapon_equip') === 'undefined'                                    && ig.game.isValidWeapon(u.item[u.selectedItemIndex].affinity, u))                                    ig.game.spawnEntity(ig.global.EntityButton_weapon_equip, ig.game.screen.x + 296, ig.game.screen.y + 64);                            } else if(u.item[u.selectedItemIndex].type === 'consumable') {                                // Check if use button exists. If not spawn it, else do nothing.                                if(typeof ig.game.getEntityByName('btn_inventory_item_use') === 'undefined')                                    ig.game.spawnEntity(ig.global.EntityButton_inventory_item_use, ig.game.screen.x + 296, ig.game.screen.y + 64);                            }                            // The selected item was in the unit's inventory slot 0 (equipped slot), unequip the item                        } else {                            if(u.item[u.selectedItemIndex].type === 'consumable') {                                // Check if use button exists. If not spawn it, else do nothing.                                if(typeof ig.game.getEntityByName('btn_inventory_item_use') === 'undefined')                                    ig.game.spawnEntity(ig.global.EntityButton_inventory_item_use, ig.game.screen.x + 296, ig.game.screen.y + 64);                            } else if(typeof ig.game.getEntityByName('btn_weapon_equip') === 'undefined'                                && ig.game.units[ig.game.activeUnit].hasEquippedItem === false)                                    ig.game.spawnEntity(ig.global.EntityButton_weapon_equip, ig.game.screen.x + 296, ig.game.screen.y + 64);                            // Check if unequip button exists. If not spawn it, else do nothing.                            else if(typeof ig.game.getEntityByName('btn_weapon_equip') === 'undefined'                                && ig.game.units[ig.game.activeUnit].hasEquippedItem)                                ig.game.spawnEntity(ig.global.EntityButton_weapon_unequip, ig.game.screen.x + 296, ig.game.screen.y + 64);                        }                    }                    // Check if discard button exists. If not spawn it, else do nothing.                    if(typeof ig.game.getEntityByName('btn_inventory_item_discard') === 'undefined')                        ig.game.spawnEntity(ig.global.EntityButton_inventory_item_discard, ig.game.screen.x + 296, ig.game.screen.y + 96);                }            }        }    });});